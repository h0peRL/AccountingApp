// <auto-generated />
using Bookkeeper_API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Bookkeeper_API.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240219161842_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Bookkeeper_API.Model.Account", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AccountName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasMaxLength(21)
                        .HasColumnType("nvarchar(21)");

                    b.HasKey("Id");

                    b.ToTable("Account");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Account");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("Bookkeeper_API.Model.BookingRecord", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Amount")
                        .HasPrecision(2)
                        .HasColumnType("decimal(2,2)");

                    b.Property<int>("BookingDate")
                        .HasColumnType("int");

                    b.Property<string>("BookingNote")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CreditAccountId")
                        .HasColumnType("int");

                    b.Property<int>("DebitAccountId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CreditAccountId");

                    b.HasIndex("DebitAccountId");

                    b.ToTable("Bookings");
                });

            modelBuilder.Entity("Bookkeeper_API.Model.UserManagement.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Bookkeeper_API.Model.AccountTypes.ActiveAccount", b =>
                {
                    b.HasBaseType("Bookkeeper_API.Model.Account");

                    b.HasDiscriminator().HasValue("ActiveAccount");
                });

            modelBuilder.Entity("Bookkeeper_API.Model.AccountTypes.ExpenseAccount", b =>
                {
                    b.HasBaseType("Bookkeeper_API.Model.Account");

                    b.HasDiscriminator().HasValue("ExpenseAccount");
                });

            modelBuilder.Entity("Bookkeeper_API.Model.AccountTypes.IncomeAccount", b =>
                {
                    b.HasBaseType("Bookkeeper_API.Model.Account");

                    b.HasDiscriminator().HasValue("IncomeAccount");
                });

            modelBuilder.Entity("Bookkeeper_API.Model.AccountTypes.PassiveAccount", b =>
                {
                    b.HasBaseType("Bookkeeper_API.Model.Account");

                    b.HasDiscriminator().HasValue("PassiveAccount");
                });

            modelBuilder.Entity("Bookkeeper_API.Model.BookingRecord", b =>
                {
                    b.HasOne("Bookkeeper_API.Model.Account", "CreditAccount")
                        .WithMany()
                        .HasForeignKey("CreditAccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Bookkeeper_API.Model.Account", "DebitAccount")
                        .WithMany()
                        .HasForeignKey("DebitAccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CreditAccount");

                    b.Navigation("DebitAccount");
                });
#pragma warning restore 612, 618
        }
    }
}
